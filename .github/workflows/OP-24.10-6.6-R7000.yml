name: OP-24.10.2-6.6-R7000

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 50 00 * * MON

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default-6.6
  CONFIG_FILE: R7000-config-6.6
  DIY_P0_SH: diy-part0.sh
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  FIRMWARE_TAG: Netgear-R7000
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 180

    steps:
    - name: Check Server Performance
      run: |
        echo "### üö® ÊÄßËÉΩË≠¶Âëä" > $GITHUB_STEP_SUMMARY
        echo "ÂàÜÈÖçÁöÑÊúçÂä°Âô®ÊÄßËÉΩÊúâÈôêÔºåÁºñËØëËøáÂ§öÊèí‰ª∂ÂèØËÉΩÂØºËá¥Â§±Ë¥•" >> $GITHUB_STEP_SUMMARY
        echo -e "\n**CPU‰ø°ÊÅØ**" >> $GITHUB_STEP_SUMMARY
        echo "- ÂûãÂè∑: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)" >> $GITHUB_STEP_SUMMARY
        echo "- Ê†∏ÂøÉÊï∞: $(nproc)" >> $GITHUB_STEP_SUMMARY
        echo -e "\n**ÂÜÖÂ≠ò‰ø°ÊÅØ**" >> $GITHUB_STEP_SUMMARY
        echo "- ÊÄªÈáè: $(free -h | awk '/Mem/{print $2}')" >> $GITHUB_STEP_SUMMARY
        echo -e "\n**Á£ÅÁõòÁ©∫Èó¥**" >> $GITHUB_STEP_SUMMARY
        df -h | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo apt -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo apt autoremove --purge
        sudo apt update
        sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev \
          file wget ccache
        sudo apt clean
        sudo timedatectl set-timezone "$TZ"
        sudo rm -fr /workdir
        echo "CCACHE_DIR=$GITHUB_WORKSPACE/ccache" >> $GITHUB_ENV
        echo "CCACHE_MAXSIZE=2G" >> $GITHUB_ENV

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 2048
        temp-reserve-mb: 500
        root-reserve-mb: 2048
        
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clone source code
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        echo "COMMIT_INFO=$(git log -1 --pretty='%h by %an on %cd')" >> $GITHUB_ENV
        echo "SOURCE_REPO=$(basename $REPO_URL)" >> $GITHUB_ENV

    - name: Generate Variables
      run: |
        cp $CONFIG_FILE $OPENWRT_PATH/.config
        cd $OPENWRT_PATH
        
        # Ëß£ÂÜ≥ÈÄíÂΩí‰æùËµñÈóÆÈ¢ò
        echo "Á¶ÅÁî®ÈóÆÈ¢òÂåÖÈò≤Ê≠¢Âæ™ÁéØ‰æùËµñ..."
        for pkg in luci-app-fchomo luci-app-torbp luci-app-alist nikki; do
          sed -i "s/CONFIG_PACKAGE_${pkg}=y/CONFIG_PACKAGE_${pkg}=n/" .config
        done
        
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV
        DEVICE_ARCH=$(cat .config | grep CONFIG_TARGET_ARCH_PACKAGES | awk -F '"' '{print $2}')
        echo "DEVICE_ARCH=$DEVICE_ARCH" >> $GITHUB_ENV
        
    - name: Cache Toolchain
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.OPENWRT_PATH }}/dl
          ${{ env.OPENWRT_PATH }}/staging_dir
          ${{ env.OPENWRT_PATH }}/build_dir
          ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-R7000-${{ env.REPO_BRANCH }}-${{ env.SOURCE_REPO }}-${{ hashFiles(env.CONFIG_FILE) }}-${{ hashFiles(env.FEEDS_CONF) }}
        restore-keys: |
          ${{ runner.os }}-R7000-${{ env.REPO_BRANCH }}

    - name: Load custom feeds & run diy shell 0 before update feeds
      run: |
        [ -e $FEEDS_CONF ] && cp $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P0_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P0_SH
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Run diy shell 1 before install feeds
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration & run diy shell 2 after install feeds
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: Resolve Dependency Issues
      run: |
        cd openwrt
        
        # Ëß£ÂÜ≥libcrypt-compatÁº∫Â§±ÈóÆÈ¢ò
        echo "‰øÆÂ§çÂ∏∏ËßÅ‰æùËµñÈóÆÈ¢ò..."
        for pkg in nginx ocserv openssh perl python3 samba4 squid sudo; do
          if [ -f "package/feeds/packages/$pkg/Makefile" ]; then
            sed -i '/DEPENDS:=.*libcrypt-compat/ s/libcrypt-compat/libcrypt/' package/feeds/packages/$pkg/Makefile
          fi
        done
        
        # ‰øÆÂ§çÂÖ∂‰ªñÁâπÂÆö‰æùËµñ
        sed -i 's/shadowsocks-libev-ss-local/shadowsocks-libev-ssr-local/' package/feeds/kenzo/luci-app-ssr-plus/Makefile
        sed -i 's/shadowsocks-libev-ss-redir/shadowsocks-libev-ssr-redir/' package/feeds/kenzo/luci-app-ssr-plus/Makefile
        
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(($(nproc) > 8 ? 8 : $(nproc)))
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        CPU_CORES=$(nproc)
        BUILD_PARALLEL=$((CPU_CORES + 1))
        [ $BUILD_PARALLEL -lt 1 ] && BUILD_PARALLEL=1
        
        echo "‰ΩøÁî® $BUILD_PARALLEL ‰∏™Âπ∂Ë°å‰ªªÂä°ËøõË°åÁºñËØë"
        if [ $BUILD_PARALLEL -gt 1 ]; then
          make -j$BUILD_PARALLEL || make -j1 V=s
        else
          make -j1 V=s
        fi
        
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: Check space usage
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@v4
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && success() && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && success() && !cancelled()
      run: |
        echo "release_tag=${{ env.FIRMWARE_TAG }}-${{ env.REPO_BRANCH }}-$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.R7000_ACT }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*
        body: |
          **This is OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
          ### üìí Firmware Info
          - **Platform**: ${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
          - **Architecture**: ${{ env.DEVICE_ARCH }}
          - **Kernel**: 6.6
          - **Default IP**: 192.168.1.1
          - **Password**: root/password
          
          ### ‚öôÔ∏è Build Details
          - **Source**: [${{ env.SOURCE_REPO }}@${{ env.REPO_BRANCH }}](${{ env.REPO_URL }}/tree/${{ env.REPO_BRANCH }})
          - **Commit**: ${{ env.COMMIT_INFO }}
          - **Build Date**: $(date +"%Y-%m-%d %H:%M:%S")
          
          ### üì¶ Included Packages
          ```
          nano wget block-mount kmod-usb-storage kmod-fs-exfat
          luci luci-app-upnp luci-app-smartdns luci-theme-argon
          shadowsocks-libev-ssr-local shadowsocks-libev-ssr-redir
          ```
          
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: env.UPLOAD_RELEASE == 'true' && success() && !cancelled()
      with:
        keep_latest: 4
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
