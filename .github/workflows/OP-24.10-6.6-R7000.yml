name: OP-24.10.2-6.6-R7000

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 50 00 * * MON

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default-6.6
  CONFIG_FILE: R7000-config-6.6
  DIY_SCRIPTS: "diy-part0.sh diy-part1.sh diy-part2.sh"
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  FIRMWARE_TAG: Netgear-R7000
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 180

    steps:
    - name: System Resource Check
      run: |
        echo "### üö® ÊÄßËÉΩË≠¶Âëä" > $GITHUB_STEP_SUMMARY
        echo "ÂàÜÈÖçÁöÑÊúçÂä°Âô®ÊÄßËÉΩÊúâÈôêÔºåÁºñËØëËøáÂ§öÊèí‰ª∂ÂèØËÉΩÂØºËá¥Â§±Ë¥•" >> $GITHUB_STEP_SUMMARY
        echo -e "\n**CPU‰ø°ÊÅØ**" >> $GITHUB_STEP_SUMMARY
        echo "- ÂûãÂè∑: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)" >> $GITHUB_STEP_SUMMARY
        echo "- Ê†∏ÂøÉÊï∞: $(nproc)" >> $GITHUB_STEP_SUMMARY
        echo -e "\n**ÂÜÖÂ≠ò‰ø°ÊÅØ**" >> $GITHUB_STEP_SUMMARY
        echo "- ÊÄªÈáè: $(free -h | awk '/Mem/{print $2}')" >> $GITHUB_STEP_SUMMARY
        echo -e "\n**Á£ÅÁõòÁ©∫Èó¥**" >> $GITHUB_STEP_SUMMARY
        df -h | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

    - name: Setup Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo apt-get autoremove -y --purge
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib \
          g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync \
          swig unzip zlib1g-dev file wget ccache
        sudo timedatectl set-timezone "$TZ"
        sudo rm -rf /workdir
        echo "CCACHE_DIR=$GITHUB_WORKSPACE/ccache" >> $GITHUB_ENV
        echo "CCACHE_MAXSIZE=2G" >> $GITHUB_ENV

    - name: Maximize Disk Space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 2048
        temp-reserve-mb: 500
        root-reserve-mb: 2048

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Clone OpenWrt Source
      id: clone
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        echo "COMMIT_INFO=$(git log -1 --pretty='%h by %an on %cd')" >> $GITHUB_ENV
        echo "SOURCE_REPO=$(basename $REPO_URL)" >> $GITHUB_ENV

    - name: Cache Dependencies
      uses: actions/cache@v4
      if: env.CACHE_TOOLCHAIN == 'true'
      with:
        path: |
          ${{ env.OPENWRT_PATH }}/dl
          ${{ env.OPENWRT_PATH }}/staging_dir
          ${{ env.OPENWRT_PATH }}/build_dir
          ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-R7000-${{ env.REPO_BRANCH }}-${{ steps.clone.outputs.SOURCE_REPO }}-${{ hashFiles(env.CONFIG_FILE) }}-${{ hashFiles(env.FEEDS_CONF) }}
        restore-keys: |
          ${{ runner.os }}-R7000-${{ env.REPO_BRANCH }}

    - name: Setup Feeds
      run: |
        [ -f "$FEEDS_CONF" ] && cp "$FEEDS_CONF" "$OPENWRT_PATH/feeds.conf.default"
        
        for script in $DIY_SCRIPTS; do
          if [ -f "$script" ]; then
            chmod +x "$script"
            echo "Executing $script..."
            (cd "$OPENWRT_PATH" && "$GITHUB_WORKSPACE/$script")
          fi
        done

        cd "$OPENWRT_PATH"
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Resolve Dependency Issues
      run: |
        cd "$OPENWRT_PATH"
        
        # Ëß£ÂÜ≥libcrypt-compatÁº∫Â§±ÈóÆÈ¢ò
        if ! grep -q "libcrypt-compat" package/feeds/packages/Makefile; then
          echo "‰øÆÂ§çlibcrypt-compat‰æùËµñ..."
          sed -i '/^DEPENDS:/ s/$/ +libcrypt/' package/feeds/packages/nginx/Makefile
          sed -i '/^DEPENDS:/ s/$/ +libcrypt/' package/feeds/packages/ocserv/Makefile
          sed -i '/^DEPENDS:/ s/$/ +libcrypt/' package/feeds/packages/openssh/Makefile
        fi
        
        # Ëß£ÂÜ≥Âæ™ÁéØ‰æùËµñÈóÆÈ¢ò
        echo "Á¶ÅÁî®ÈóÆÈ¢òÂåÖÈò≤Ê≠¢Âæ™ÁéØ‰æùËµñ..."
        for pkg in luci-app-fchomo luci-app-torbp luci-app-alist nikki; do
          sed -i "s/CONFIG_PACKAGE_${pkg}=y/CONFIG_PACKAGE_${pkg}=n/" .config
        done

    - name: Configure Build
      run: |
        cd "$OPENWRT_PATH"
        [ -f "$GITHUB_WORKSPACE/$CONFIG_FILE" ] && cp "$GITHUB_WORKSPACE/$CONFIG_FILE" .config
        [ -d "$GITHUB_WORKSPACE/files" ] && cp -R "$GITHUB_WORKSPACE/files" .
        
        # Á°Æ‰øùÂπ∂Ë°åÊï∞ÊúâÊïà
        CPU_CORES=$(nproc)
        BUILD_PARALLEL=$((CPU_CORES + 1))
        [ $BUILD_PARALLEL -lt 1 ] && BUILD_PARALLEL=1
        echo "BUILD_PARALLEL=$BUILD_PARALLEL" >> $GITHUB_ENV
        
        make defconfig
        make -j$BUILD_PARALLEL tools/install
        make -j$BUILD_PARALLEL toolchain/install

    - name: Download Packages
      run: |
        cd "$OPENWRT_PATH"
        make download -j8
        find dl -size -1024c -delete

    - name: Compile Firmware
      timeout-minutes: 120
      run: |
        cd "$OPENWRT_PATH"
        echo "Using $BUILD_PARALLEL parallel jobs"
        
        # ÂÆâÂÖ®ÁºñËØëÁ≠ñÁï•
        if [ $BUILD_PARALLEL -gt 1 ]; then
          make -j$BUILD_PARALLEL || make -j1 V=s
        else
          make -j1 V=s
        fi
        
        FIRMWARE_DIR=$(find bin/targets -type d -name packages | xargs dirname)
        echo "FIRMWARE_PATH=$PWD/$FIRMWARE_DIR" >> $GITHUB_ENV
        echo "FILE_SUFFIX=_$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

    - name: Upload Artifacts
      if: success() && !cancelled()
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt-Binaries${{ env.FILE_SUFFIX }}
        path: |
          ${{ env.OPENWRT_PATH }}/bin
          ${{ env.OPENWRT_PATH }}/.config
          ${{ env.OPENWRT_PATH }}/feeds.conf.default

    - name: Create Release
      if: env.UPLOAD_RELEASE == 'true' && success() && !cancelled()
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.R7000_ACT }}
      with:
        tag_name: ${{ env.FIRMWARE_TAG }}-${{ env.REPO_BRANCH }}-$(date +'%Y%m%d')
        name: ${{ env.FIRMWARE_TAG }} Build $(date +'%F')
        body: |
          **OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
          ### Build Info
          - üîß Source: [${{ env.SOURCE_REPO }}@${{ env.REPO_BRANCH }}](${{ env.REPO_URL }}/tree/${{ env.REPO_BRANCH }})
          - üö¶ Commit: ${{ env.COMMIT_INFO }}
          - ‚è±Ô∏è Build Date: $(date)
          
          ### Device Info
          - Default IP: `192.168.1.1`
          - Login: `root` / `password`
          
          ### Included Packages
          ```
          nano wget block-mount kmod-usb-storage kmod-fs-exfat
          luci luci-app-upnp luci-app-smartdns luci-theme-argon
          ```
        files: ${{ env.FIRMWARE_PATH }}/*

    - name: Cleanup Old Artifacts
      if: always()
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
