name: OpenWrt_R7000_24.10

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: 'Perform clean build'
        required: false
        default: 'false'
      upload:
        description: 'Upload firmware'
        required: false
        default: 'true'

env:
  UPLOAD_FIRMWARE: ${{ inputs.upload }}
  CLEAN_BUILD: ${{ inputs.clean_build }}
  TARGET: netgear_r7000
  TARGET_PROFILE: NETGEAR R7000
  TZ: Asia/Shanghai
    
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Netgear R7000
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Free disk space
      uses: coder-xiaomo/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        docker-images: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib \
        g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils \
        rsync unzip zlib1g-dev file wget ccache

    - name: Clone OpenWrt source
      run: |
        git clone --depth 1 https://github.com/openwrt/openwrt.git -b v24.10.0
        cd openwrt
        echo "src-git kenzo https://github.com/kenzok8/small-package" >> feeds.conf.default

    - name: Setup build environment
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        if [ "$CLEAN_BUILD" = "true" ]; then
          make clean
        fi

    - name: Configure for R7000
      working-directory: ./openwrt
      run: |
        cat > .config <<EOF
CONFIG_TARGET_bcm53xx=y
CONFIG_TARGET_bcm53xx_generic=y
CONFIG_TARGET_bcm53xx_generic_DEVICE_netgear_r7000=y
CONFIG_TARGET_IMAGES_GZIP=y
CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_luci-theme-bootstrap=y
EOF
        make defconfig

    - name: Download packages
      working-directory: ./openwrt
      run: |
        make -j$(nproc) download
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      timeout-minutes: 180
      run: |
        echo "Building with $(($(nproc)+1)) threads"
        make -j$(($(nproc)+1)) || make -j1 V=s

    - name: Prepare artifacts
      if: env.UPLOAD_FIRMWARE == 'true'
      run: |
        mkdir -p firmware
        mv openwrt/bin/targets/bcm53xx/generic/openwrt-bcm53xx-generic-netgear_r7000-* firmware/
        cd firmware
        sha256sum * > sha256sums.txt
        echo "Built on $(date)" > build-info.txt
        echo "OpenWrt 24.10 for Netgear R7000" >> build-info.txt

    - name: Upload firmware
      if: env.UPLOAD_FIRMWARE == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-24.10-r7000
        path: firmware/*
        retention-days: 7

    - name: Create release
      if: env.UPLOAD_FIRMWARE == 'true' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        files: firmware/*
        tag_name: r7000-24.10-$(date +%Y%m%d)
        name: OpenWrt 24.10 for Netgear R7000
        body: |
          OpenWrt 24.10 firmware for Netgear R7000
          Built on $(date)
